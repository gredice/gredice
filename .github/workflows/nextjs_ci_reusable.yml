# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: 'CI - Next.js'

on:
    workflow_call:
        inputs:
            name:
                required: true
                type: string
                description: 'Name of the package or application to analzye'
            path:
                required: true
                type: string
                description: 'Path to the package or application to analzye'
            vercelProjectIdSecretName:
              required: true
              type: string
              description: 'Name of the secret containing the Vercel project ID'

env:
    VERCEL_PROJECT_ID: ${{ secrets[format(inputs.vercelProjectIdSecretName)] }}
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
    lint:
        timeout-minutes: 5
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                fetch-depth: 2
  
            - name: ‚ú® Setup Node
              uses: actions/setup-node@v4
              with:
                node-version: "22.14.0"
      
            - uses: pnpm/action-setup@v3
              name: ‚ú® Install pnpm
              with:
                version: 9.12.2
      
            - name: ‚ú® Get pnpm store directory
              shell: bash
              run: |
                echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
            - uses: actions/cache@v4
              name: ‚ú® Setup pnpm cache
              with:
                path: ${{ env.STORE_PATH }}
                key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                restore-keys: |
                  ${{ runner.os }}-pnpm-store-
  
            - name: üì¶Ô∏è Install dependencies
              run: pnpm install --frozen-lockfile --filter ${{ inputs.name }}... --filter .
      
            - name: üîé Lint app
              if: success() && github.event_name == 'pull_request'
              run: pnpm lint --filter=${{ inputs.name }}
    build:
        timeout-minutes: 5
        runs-on: ubuntu-latest
        needs: lint
        steps:
          - uses: actions/checkout@v4
            with:
              fetch-depth: 2

          - name: ‚ú® Setup Node
            uses: actions/setup-node@v4
            with:
              node-version: "20.18.3"
    
          - uses: pnpm/action-setup@v3
            name: ‚ú® Install pnpm
            with:
              version: 9.12.2
    
          - name: ‚ú® Get pnpm store directory
            shell: bash
            run: |
              echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
          - uses: actions/cache@v4
            name: ‚ú® Setup pnpm cache
            with:
              path: ${{ env.STORE_PATH }}
              key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
              restore-keys: |
                ${{ runner.os }}-pnpm-store-

          - name: üì¶Ô∏è Install dependencies
            run: pnpm install --frozen-lockfile --filter ${{ inputs.name }}... --filter .
    
          - name: ‚ú® Setup Vercel CLI
            run: npm i --g vercel@latest

          - name: ‚öôÔ∏è Pull Vercel Environment Information
            run: vercel env pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }} 
            working-directory: ${{ inputs.path }}/

          - name: ‚öíÔ∏è Build app
            run: pnpm build --filter=${{ inputs.name }}
    test:
        timeout-minutes: 5
        runs-on: ubuntu-latest
        needs: lint
        steps:
          - uses: actions/checkout@v4
            with:
              fetch-depth: 2

          - name: ‚ú® Setup Node
            uses: actions/setup-node@v4
            with:
              node-version: "20.18.3"
    
          - uses: pnpm/action-setup@v3
            name: ‚ú® Install pnpm
            with:
              version: 9.12.2
    
          - name: ‚ú® Get pnpm store directory
            shell: bash
            run: |
              echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    
          - uses: actions/cache@v4
            name: ‚ú® Setup pnpm cache
            with:
              path: ${{ env.STORE_PATH }}
              key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
              restore-keys: |
                ${{ runner.os }}-pnpm-store-

          - name: üì¶Ô∏è Install dependencies
            run: pnpm install --frozen-lockfile --filter ${{ inputs.name }}... --filter .
    
          - name: ‚ú® Setup Vercel CLI
            run: npm i --g vercel@latest

          - name: ‚öôÔ∏è Pull Vercel Environment Information
            run: vercel env pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
            working-directory: ${{ inputs.path }}/

          - name: üì¶Ô∏è Install playwright browsers
            if: success() && github.event_name == 'pull_request'
            run: |
              pnpm install --global playwright
              pnpm playwright install --with-deps
            working-directory: ${{ inputs.path }}/

          - name: ‚öíÔ∏è Test app
            if: success() && github.event_name == 'pull_request'
            run: pnpm test --filter=${{ inputs.name }}
